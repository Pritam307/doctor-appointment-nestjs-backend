version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: doctor-appointment-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: appointments_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - app-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS Application (Development)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: doctor-appointment-api-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:password@postgres:5432/appointments_dev
      JWT_SECRET: dev-secret-key-change-in-production
      JWT_EXPIRES_IN: 1h
      PORT: 3000
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network-dev
    volumes:
      # Mount source code for hot reload
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./nest-cli.json:/app/nest-cli.json
      - ./test:/app/test
      - ./dist:/app/dist
    command: npm run start:dev
    stdin_open: true
    tty: true

volumes:
  postgres_dev_data:
    driver: local

networks:
  app-network-dev:
    driver: bridge 